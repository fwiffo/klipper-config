# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch offset for Z0       [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

[include client.cfg]
[include client_macros.cfg]
[include display.cfg]

[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_240032000150304E35313720-if00
restart_method: command
##--------------------------------------------------------------------

[mcu rpi]
serial: /tmp/klipper_host_mcu

[printer]
kinematics: corexy
max_velocity: 600
max_accel: 8000
max_z_velocity: 25          # Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

[beacon]
serial: /dev/serial/by-id/usb-Beacon_Beacon_RevH_392309745154354D38202020FF0A152F-if00 
speed: 5
lift_speed: 20
x_offset: 0
y_offset: 21.5
mesh_main_direction: x
mesh_runs: 2
accel_axes_map: -x, -y, z
use_coil_temperature_sensor: False

#####################################################################
#   X/Y Stepper Settings
#####################################################################

# B Stepper - Left
# Connected to MOTOR_0
# Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 400  # set to 200 for 1.8 degree stepper
endstop_pin: PG6
position_min: 0
# 300mm build
position_endstop: 300
position_max: 300
homing_speed: 50   # Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 1

# A Stepper - Right
# Connected to MOTOR_1
# Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 400  # set to 200 for 1.8 degree stepper
endstop_pin: PG9
position_min: 0
# 300mm build
position_endstop: 304
position_max: 304
homing_speed: 50  # Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 1

#####################################################################
#   Z Stepper Settings
#####################################################################

# Z0 Stepper - Front Left
# Connected to MOTOR_2
# Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
endstop_pin: probe: z_virtual_endstop
homing_retract_dist: 0 # beacon needs this set to 0
# Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
# (+) value = endstop above Z0, (-) value = endstop below
# Increasing position_endstop brings nozzle closer to the bed
# After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
# position_endstop: -0.5
# 300mm build
position_max: 260
homing_speed: 20
homing_retract_dist: 3

[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

# Z1 Stepper - Rear Left
# Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

# Z2 Stepper - Rear Right
# Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

# Z3 Stepper - Front Right
# Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999


#####################################################################
#   Extruder
#####################################################################

# It seems like my revo is printing too cold? Was there a bad batch of
# thermistors? Apparently? Try using these as a starting point to correct the
# offset relative to other printers. Can use chamber and beacon as cross-checks
# for lower tempertures and test prints at higher temps.
[thermistor ATC Semitec 104NT-4-R025H42G Revo Tweaked]
temperature1: 25      ; Stock 25
resistance1: 100000
temperature2: 146     ; Stock 160
resistance2: 1074
temperature3: 286     ; Stock 300
resistance3: 82.78

# Connected to MOTOR_6
# Heater - HE0
# Thermistor - T0
[extruder]
step_pin: PE2
dir_pin: !PE3
enable_pin: !PD4
# Update value below when you perform extruder calibration
# If you ask for 100mm of filament, but in reality it is 98mm:
# rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
# 22.6789511 is a good starting point #Bondtech 5mm Drive Gears
rotation_distance: 22.6789511 
# Update Gear Ratio depending on your Extruder Type
# Use 50:10 for Stealthburner/Clockwork 2
# Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
# Use 80:20 for M4, M3.1
gear_ratio: 50:10               # BMG Gear Ratio
microsteps: 32
full_steps_per_rotation: 200    # 200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: PA2
# Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
# Use "Generic 3950" for NTC 100k 3950 thermistors
sensor_type: ATC Semitec 104NT-4-R025H42G Revo Tweaked
sensor_pin: PF5
min_temp: 0
max_temp: 310  ; default 300, but increase temporarily for testing with fixed thermistor curve
max_power: 1.0
min_extrude_temp: 160  ; default 170, but decrease temporarily for testing with fixed thermistor curve
# control = pid
# pid_kp = 25.371
# pid_ki = 2.685
# pid_kd = 59.939
pressure_advance: 0.028
pressure_advance_smooth_time: 0.024
max_extrude_only_distance: 500.0
max_extrude_cross_section: 3.0

# E0 on MOTOR6
[tmc2209 extruder]
uart_pin: PE1
interpolate: false
run_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 999999


#####################################################################
#   Bed Heater
#####################################################################

[thermistor Custom Keenovo NTC100K B3950]
# From Keenovo spec sheet https://www.keenovo.com/NTC-Thermistor-R-T-Table.pdf
temperature1: 20
resistance1: 125245
temperature2: 80
resistance2: 12540
temperature3: 220
resistance3: 396

# SSR Pin - HE1
# Thermistor - TB
[heater_bed]
heater_pin: PA1
# Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
# Use "Generic 3950" for Keenovo heaters
sensor_type: Custom Keenovo NTC100K B3950
sensor_pin: PF3
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.6
min_temp: 0
max_temp: 120
# control = pid
# pid_kp = 41.296
# pid_ki = 1.464
# pid_kd = 291.138

#####################################################################
#   Fan Control
#####################################################################

# Print Cooling Fan - FAN0
[fan]
pin: PA8
kick_start_time: 0.5
# Depending on your fan, you may need to increase this value
# if your fan will not start. Can change cycle_time (increase)
# if your fan is not able to slow down effectively
off_below: 0.10

# Hotend Fan - FAN1
[heater_fan hotend_fan]
pin: PE5
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
# If you are experiencing back flow, you can reduce fan_speed
# fan_speed: 1.0

# Electronics chamber fans
[multi_pin cfpin]
pins: PD12,PD13

[temperature_sensor raspberry_pi]
sensor_type: temperature_host

[temperature_sensor controller]
sensor_type: temperature_mcu

[temperature_fan electronics]
sensor_type: temperature_combined
sensor_list: temperature_sensor raspberry_pi, temperature_sensor controller
combination_method: max
maximum_deviation: 999
pin: multi_pin:cfpin
kick_start_time: 1
max_power: 1.00
off_below: 0.10
min_temp: 0
max_temp: 100
control: watermark
shutdown_speed: 0.0
target_temp: 50
max_delta: 5

# Exhaust fan - FAN3
#[heater_fan exhaust_fan]
#pin: PD13
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0

[temperature_sensor chamber]
sensor_type: BME280
i2c_mcu: rpi
i2c_bus: i2c.1
i2c_address: 119
gcode_id: CHAMBER

#####################################################################
#   LED Control
#####################################################################

# Chamber Lighting - CNC_FAN5
[output_pin caselight]
pin: PD15
pwm: true
hardware_pwm: true
shutdown_value: 0.0
value: 0.0
cycle_time: 0.0001666666666667

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[safe_z_home]
# XY Location of the Z Endstop Switch
# Update -10,-10 to the XY coordinates of your endstop pin
# (such as 157,305) after going through Z Endstop Pin
# Location Definition step.
home_xy_position: 150,150
z_hop: 5
speed: 500

# Use QUAD_GANTRY_LEVEL to level a gantry.
# Min & Max gantry corners - measure from nozzle at MIN (0,0) and
# MAX (250, 250), (300,300), or (350,350) depending on your printer size
# to respective belt positions
[quad_gantry_level]
# 300mm build
gantry_corners:
   -60,-10
   360,370
#  Probe points
points:
   50,25
   50,225
   250,225
   250,25
speed: 500
horizontal_move_z: 5
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Displays
#####################################################################

[display]
# mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2
display_group: voron_display

[neopixel mini_display]
# To control Neopixel RGB in mini12864 display
pin: EXP1_6
chain_count: 3
color_order: RGB
initial_red: 0.06
initial_green: 0.00
initial_blue: 0.09

# Set RGB values on boot up for each Neopixel.
# Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
  {% set led = printer.configfile.settings["neopixel mini_display"] %}
  SET_LED LED=mini_display RED={led.initial_red} GREEN={led.initial_green} BLUE={led.initial_blue} INDEX=1 TRANSMIT=0
  SET_LED LED=mini_display RED={led.initial_red} GREEN={led.initial_green} BLUE={led.initial_blue} INDEX=2 TRANSMIT=0
  SET_LED LED=mini_display RED=0.4 GREEN=0.4 BLUE=0.4 INDEX=3

[neopixel stealthburner]
pin: PB0
chain_count: 3
color_order: GRBW
initial_red: 0.00
initial_green: 0.02
initial_blue: 0.15
initial_white: 0.01

# Set RGB values on boot up for each Neopixel.
# Index 1 = logo, Index 2 and 3 = ducts
[delayed_gcode setstealthburnerneopixel]
initial_duration: 1
gcode:
  {% set led = printer.configfile.settings["neopixel stealthburner"] %}
  SET_LED LED=stealthburner RED={led.initial_red} GREEN={led.initial_green} BLUE={led.initial_blue} WHITE={led.initial_white} INDEX=1 TRANSMIT=0
  {% set led = printer["gcode_macro _MSG_IDLE"] %}
  SET_LED LED=stealthburner RED={led.initial_red} GREEN={led.initial_green} BLUE={led.initial_blue} WHITE={led.initial_white} INDEX=2 TRANSMIT=0
  SET_LED LED=stealthburner RED={led.initial_red} GREEN={led.initial_green} BLUE={led.initial_blue} WHITE={led.initial_white} INDEX=3

#--------------------------------------------------------------------

[exclude_object]

[bed_mesh]
speed: 500
horizontal_move_z: 3
mesh_min: 25, 25
mesh_max: 275, 275
fade_start: 0.6
fade_end: 10.0
algorithm: bicubic
zero_reference_position: 150, 150
probe_count: 15, 15
adaptive_margin: 5

[resonance_tester]
accel_chip: beacon
probe_points: 150, 150, 20

[input_shaper]
  shaper_freq_x: 60.2
  shaper_type_x: mzv
  shaper_freq_y: 50.8
  shaper_type_y: 2hump_ei

# -----------------------------------------------------------
# Config settings for shared macros.
# -----------------------------------------------------------
[gcode_macro _CUSTOM_CONFIG]
description: Various configuration options for shared macros.
variable_load_filament_distance: 160
variable_unload_filament_distance: -80
variable_warmup_brightness: 0.5
gcode:
  # Used only for configuration values.

# -----------------------------------------------------------
# Pre-defined colors and messages for various LED states
# -----------------------------------------------------------
[gcode_macro _SET_WARMUP_LED]
description: Set the LEDs that indicate warmup status.
gcode:
  SET_LED LED=stealthburner RED={params.RED} GREEN={params.GREEN} BLUE={params.BLUE} WHITE={params.WHITE} INDEX=1 TRANSMIT=0
  SET_LED LED=stealthburner RED={params.RED} GREEN={params.GREEN} BLUE={params.BLUE} WHITE={params.WHITE} INDEX=2 TRANSMIT=0
  SET_LED LED=stealthburner RED={params.RED} GREEN={params.GREEN} BLUE={params.BLUE} WHITE={params.WHITE} INDEX=3

[gcode_macro LIGHTS]
description: Turn on case lights
gcode:
  SET_PIN PIN=caselight VALUE={params.POWER|default(0.1)|float }

[gcode_macro _MSG_IDLE]
description: Sets LED to indicate an idle state.
variable_initial_red: 0.06
variable_initial_green: 0.00
variable_initial_blue: 0.09
variable_initial_white: 0.00
gcode:
  {% set led = printer.configfile.settings["neopixel stealthburner"] %}
  M117
  SET_LED LED=stealthburner RED={led.initial_red} GREEN={led.initial_green} BLUE={led.initial_blue} WHITE={led.initial_white} INDEX=1 TRANSMIT=0
  {% set led = printer["gcode_macro _MSG_IDLE"] %}
  SET_LED LED=stealthburner RED={led.initial_red} GREEN={led.initial_green} BLUE={led.initial_blue} WHITE={led.initial_white} INDEX=2 TRANSMIT=0
  SET_LED LED=stealthburner RED={led.initial_red} GREEN={led.initial_green} BLUE={led.initial_blue} WHITE={led.initial_white} INDEX=3

[gcode_macro _MSG_PAUSED]
description: Sets LED and status to indicate paused state.
gcode:
  M117 Paused.
  LIGHTS
  SET_LED LED=stealthburner RED=0.08 GREEN=0.00 BLUE=0.08 WHITE=0.08 INDEX=1 TRANSMIT=0
  SET_LED LED=stealthburner RED=0.00 GREEN=0.00 BLUE=0.00 WHITE=0.20 INDEX=2 TRANSMIT=0
  SET_LED LED=stealthburner RED=0.00 GREEN=0.00 BLUE=0.00 WHITE=0.20 INDEX=3

[gcode_macro _MSG_PRINTING]
description: Sets LED for printing.
gcode:
  M117
  SET_LED LED=stealthburner RED=0.00 GREEN=0.12 BLUE=0.00 WHITE=0.00 INDEX=1 TRANSMIT=0
  SET_LED LED=stealthburner RED=0.00 GREEN=0.00 BLUE=0.00 WHITE=0.40 INDEX=2 TRANSMIT=0
  SET_LED LED=stealthburner RED=0.00 GREEN=0.00 BLUE=0.00 WHITE=0.40 INDEX=3

[gcode_macro _MSG_ERROR]
description: Sets LED to indicate an error.
gcode:
  LIGHTS
  SET_LED LED=stealthburner RED=0.21 GREEN=0.00 BLUE=0.01 WHITE=0.00 INDEX=1 TRANSMIT=0
  {% set led = printer["gcode_macro _MSG_IDLE"] %}
  SET_LED LED=stealthburner RED={led.initial_red} GREEN={led.initial_green} BLUE={led.initial_blue} WHITE={led.initial_white} INDEX=2 TRANSMIT=0
  SET_LED LED=stealthburner RED={led.initial_red} GREEN={led.initial_green} BLUE={led.initial_blue} WHITE={led.initial_white} INDEX=3

[gcode_macro FULL_LEVEL]
description: Homing, quad-gantry-leveling, and bed-meshing
gcode:
  _HOME_IF_NOT_HOMED
  QUAD_GANTRY_LEVEL
  G28  # do you need to rehome after quad_gantry_level?
  BED_MESH_CALIBRATE
  PARK

[gcode_macro _LEVEL_AT_PRINT_START]
description: Leveling steps right before printing.
gcode:
  M117 Quad gantry level...
  QUAD_GANTRY_LEVEL
  M117 Bed mesh...
  G28
  BED_MESH_CALIBRATE PROFILE=adaptive ADAPTIVE=1
  M117

[shaketune]
# result_folder: ~/printer_data/config/ShakeTune_results
#    The folder where the results will be stored. It will be created if it
#    doesn't exist.
# number_of_results_to_keep: 3
#    The number of results to keep in the result_folder. The oldest results
#    will #    be automatically deleted after each runs.
# keep_raw_csv: False
#    If True, the raw CSV files will be kept in the result_folder alongside the
#    PNG graphs. If False, they will be deleted and only the graphs will be
#    kept.
# show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for "system" macros that are
#    not in the #    printer.cfg file. If you want to see the macros in the
#    webui, set this to True.
# timeout: 300
#    The maximum time in seconds to let Shake&Tune process the CSV files and
#    generate the graphs.

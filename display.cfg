[display]
lcd_type: sh1106
i2c_mcu: displayEncoder
i2c_bus: i2c1a
encoder_pins: ^displayEncoder:PA3, ^displayEncoder:PA4
click_pin: ^!displayEncoder:PA1
kill_pin: ^!displayEncoder:PA5
x_offset: 2
#   Set the Vcomh value on SSD1306/SH1106 displays. This value is
#   associated with a "smearing" effect on some OLED displays. The
#   value may range from 0 to 63. Default is 0.
#   Adjust this value if you get some vertical stripes on your display. (31 seems to be a good value)
vcomh: 31
menu_root: __custom_main
menu_timeout: 300

[neopixel displayStatus]
pin: displayEncoder:PA0
chain_count: 1
color_order: GRB
initial_RED: 0.02
initial_GREEN: 0.0
initial_BLUE: 0.05

[display_glyph voron]
data:
  ......***.......
  ....*******.....
  ...*********....
  .*************..
  *****..***..***.
  ****..***..****.
  ***..***..*****.
  **..***..******.
  ******..***..**.
  *****..***..***.
  ****..***..****.
  ***..***..*****.
  .*************..
  ...**********...
  ....*******.....
  ......***.......

[display_glyph voron_big]
data:
  ................
  ................
  ................
  .....***...***..
  ....***...***...
  ...***...***....
  ..***...***.....
  .***...***......
  ......***...***.
  .....***...***..
  ....***...***...
  ...***...***....
  ..***...***.....
  ................
  ................
  ................

[display_glyph ex_right]
data:
  ................
  ................
  ..************..
  .....******.....
  ..************..
  .....******.....
  ..************..
  ................
  ....********....
  ....******.*....
  ....********....
  ................
  ......****......
  .......**.......
  ********........
  ................

[display_glyph ex_left]
data:
  ................
  ..************..
  .....******.....
  ..************..
  .....******.....
  ..************..
  ................
  ....********....
  ....******.*....
  ....********....
  ................
  ......****......
  .......**.......
  ........********
  ****************
  ................

[display_glyph ex_right_halfl]
data:
  ................
  ................
  ..........******
  .............***
  ..........******
  .............***
  ..........******
  ................
  ............****
  ............****
  ............****
  ................
  ..............**
  ...............*
  ****************
  ................

[display_glyph ex_right_halfr]
data:
  ................
  ................
  ******..........
  ***.............
  ******..........
  ***.............
  ******..........
  ................
  ****............
  **.*............
  ****............
  ................
  **..............
  *...............
  ................
  ................

[display_glyph ex_left_halfl]
data:
  ................
  ..........******
  .............***
  ..........******
  .............***
  ..........******
  ................
  ............****
  ............****
  ............****
  ................
  ..............**
  ...............*
  ................
  ****************
  ................

[display_glyph ex_left_halfr]
data:
  ................
  ******..........
  ***.............
  ******..........
  ***.............
  ******..........
  ................
  ****............
  **.*............
  ****............
  ................
  **..............
  *...............
  ****************
  ****************
  ................

[display_glyph ex_1layer]
data:
  ................
  ................
  ................
  ................
  ................
  ................
  ................
  ................
  ................
  ................
  ................
  ................
  ................
  ................
  ****************
  ................

[display_glyph ex_2layer]
data:
  ................
  ................
  ................
  ................
  ................
  ................
  ................
  ................
  ................
  ................
  ................
  ................
  ................
  ****************
  ****************
  ................

[display_template _z_pos]
text:
  {% if 'z' in printer.toolhead.homed_axes %}
    { "%6s" % ("Z%5.1f" % printer.toolhead.position.z) }
  {% endif %}

[display_template _print_status_old]
text:
  {% if printer.display_status.message %}
    { printer.display_status.message }
  {% elif printer.idle_timeout.printing_time %}
    { "Z%6.2f " % printer.toolhead.position.z }
    {% set frame = (printer.toolhead.estimated_print_time|int % 17) %}
    {% if frame == 1 %}
      ~ex_right_halfr~
    {% elif frame == 2 %}
      ~ex_right~
    {% elif frame == 3 %}
      ~ex_right_halfl~~ex_right_halfr~
    {% elif frame == 4 %}
      ~ex_1layer~~ex_right~
    {% elif frame == 5 %}
      ~ex_1layer~~ex_right_halfl~~ex_right_halfr~
    {% elif frame == 6 %}
      ~ex_1layer~~ex_1layer~~ex_right~
    {% elif frame == 7 %}
      ~ex_1layer~~ex_1layer~~ex_right_halfl~
    {% elif frame == 8 %}
      ~ex_1layer~~ex_1layer~~ex_1layer~
    {% elif frame == 9 %}
      ~ex_1layer~~ex_1layer~~ex_left_halfl~
    {% elif frame == 10 %}
      ~ex_1layer~~ex_1layer~~ex_left~
    {% elif frame == 11 %}
      ~ex_1layer~~ex_left_halfl~~ex_left_halfr~
    {% elif frame == 12 %}
      ~ex_1layer~~ex_left~~ex_2layer~
    {% elif frame == 13 %}
      ~ex_left_halfl~~ex_left_halfr~~ex_2layer~
    {% elif frame == 14 %}
      ~ex_left~~ex_2layer~~ex_2layer~
    {% elif frame == 15 %}
      ~ex_left_halfr~~ex_2layer~~ex_2layer~
    {% elif frame == 16 %}
      ~ex_2layer~~ex_2layer~~ex_2layer~
    {% endif %}
  {% else %}
    Idle.
  {% endif %}

[display_template _print_status]
text:
  {% set message = printer.display_status.message %}
  {% if printer.idle_timeout.printing_time %}
    {% set pause_frames = 1 %}
    {% set message_frames = 3 if message else 0 %}
    {% set width = 14 %}
    {% set filename = printer.print_stats.filename %}
    {% set scroll_frames = [filename|length - width, 0]|max %}
    {% set cycle = pause_frames + scroll_frames + message_frames %}
    {% set frame = printer.toolhead.estimated_print_time|int % cycle %}
    {% if frame < pause_frames %}
      { filename[:width] }
    {% elif frame < scroll_frames + pause_frames %}
      { filename[frame-pause_frames+1:frame-pause_frames+width+1] }
    {% elif message %}
      { message }
    {% endif %}
  {% elif message %}
    { message }
  {% else %}
    Idle.
  {% endif %}

[display_data _default_16x4 voron]
position: 3, 14
text: ~voron_big~

[display_data _default_16x4 speed_factor]
position: 1, 10
text: { render("_z_pos") }

# Support time-remaining in M73
[gcode_macro M73]
rename_existing: M73.1
variable_remaining: 0.0
default_parameter_P: 0.0
default_parameter_R: 0.0
gcode:
  ; Time-remaining is passed as minutes.
  {% set seconds_remaining = R|float * 60 %}
  SET_GCODE_VARIABLE MACRO=M73 VARIABLE=remaining VALUE={seconds_remaining}
  M73.1 P{P} R{R}

[display_template _printing_time]
text:
  {% set rtime = printer["gcode_macro M73"].remaining %}
  {% set prog = printer.display_status.progress %}
  {% set ptime =  printer.print_stats.print_duration %}
  {% if not rtime and prog and prog >= 0.01 and ptime %}
    {% set rtime = (1-prog) * ptime / prog %}
  {% endif %}
  {% if rtime %}
    { "%02d:%02d" % (rtime // (60 * 60), (rtime // 60) % 60) }
  {% else %}
    { "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }
  {% endif %}


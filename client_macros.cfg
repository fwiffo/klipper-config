# These macros are required for Fluidd to correctly function.
# You can copy these entries into your printer.cfg.
#
# Alternatively, import this file by adding
# this line into your printer.cfg;
#
# [include client_macros.cfg]

# -----------------------------------------------------------
# Pre-defined colors and messages for various LED states
# -----------------------------------------------------------
[gcode_macro LED_IDLE]
gcode:
  M117 Idle.
  SET_LED LED=displayStatus RED=0.02 GREEN=0 BLUE=0.05

[gcode_macro LED_WARMUP1]
gcode:
  M117 Heating...
  SET_LED LED=displayStatus RED=0.05 GREEN=0.015 BLUE=0

[gcode_macro LED_HEAT_SOAK]
gcode:
  M117 Heat soak...
  SET_LED LED=displayStatus RED=0.10 GREEN=0.030 BLUE=0

[gcode_macro LED_WARMUP2]
gcode:
  M117 Heating...
  SET_LED LED=displayStatus RED=0.15 GREEN=0.045 BLUE=0

[gcode_macro LED_READY]
gcode:
  M117 Starting...
  SET_LED LED=displayStatus RED=0.20 GREEN=0.060 BLUE=0

[gcode_macro LED_PAUSED]
gcode:
  M117 Paused.
  SET_LED LED=displayStatus RED=0.04 GREEN=0.05 BLUE=0

[gcode_macro LED_PRINTING]
gcode:
  ; Clear status message so that the display configuration can
  ; do something dynamic instead, like toolhead coordinates.
  M117
  SET_LED LED=displayStatus RED=0 GREEN=0.05 BLUE=0.02

[gcode_macro LED_ERROR]
gcode:
  SET_LED LED=displayStatus RED=0.2 GREEN=0 BLUE=0.02

# -----------------------------------------------------------
# Reusable functionality
# -----------------------------------------------------------
[gcode_macro HOME_IF_NOT_HOMED]
gcode:
  CLEAR_DELAYED_GCODES
  {% if printer.toolhead.homed_axes != 'xyz' %}
    G28
  {% endif %}

[gcode_macro CENTER_PRINTHEAD]
gcode:
  HOME_IF_NOT_HOMED
  # Calculate bed center.
  {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
  {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
  {% set x_park = max_x / 2 %}
  {% set y_park = max_y / 2 %}
  {% set speed = params.SPEED|default(6000)|float %}

  G0 X{x_park} Y{y_park} Z20 F{speed}

[gcode_macro PARK_USEFULLY]
gcode:
  HOME_IF_NOT_HOMED
  # Calculate a position at the center-rear of the bed.
  {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
  {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
  {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
  {% set x_park = max_x / 2 %}
  {% set z_park = [max_z, printer.toolhead.position.z + 20] | min %}
  {% set speed = params.SPEED|default(6000)|float %}

  G0 X{x_park} Y{max_y} Z{z_park} F{speed}

[gcode_macro RESTORE_SETTINGS]
gcode:
  # Restore various parameters to their original configured values.
  {% set s = printer.configfile.settings.extruder %}
  SET_PRESSURE_ADVANCE ADVANCE={s.pressure_advance}
  {% set s = printer.configfile.settings.printer %}
  SET_VELOCITY_LIMIT VELOCITY={s.max_velocity} ACCEL={s.max_accel} ACCEL_TO_DECEL={s.max_accel_to_decel} SQUARE_CORNER_VELOCITY={s.square_corner_velocity}

# -----------------------------------------------------------
# Main printing macros
# -----------------------------------------------------------
[gcode_macro PRINT_START]
# Use PRINT_START for the slicer starting script.
variable_soak_time: 0
variable_soak_start: 0
gcode:
  # Check for required parameters.
  {% if params.TEMP and params.BED_TEMP %}
    LED_WARMUP1
    M140 S{ params.BED_TEMP }                                        ; set bed temperature, but continue
    CENTER_PRINTHEAD SPEED=18000

    {% set preheat_bed_temp = params.BED_TEMP|float - 10 %}
    TEMPERATURE_WAIT sensor=heater_bed minimum={ preheat_bed_temp }  ; wait until it's close to temperature

    # Dwell for heat soak if requested
    LED_HEAT_SOAK
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=soak_start VALUE={ printer.idle_timeout.printing_time }
    G4 P{ printer["gcode_macro PRINT_START"].soak_time|float * 1000 }
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=soak_start VALUE=0
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=soak_time VALUE=0

    LED_WARMUP2
    M109 S{ params.TEMP }                                            ; set hotend temperature and wait
    M190 S{ params.BED_TEMP }                                        ; wait for bed to come fully up to temperature

    LED_READY
    {% if params.SKIP_HOME %}
      # Skip homing if possible - assumes things were homed hot. Useul for printing
      # multi-colored parts as sequential prints.
      HOME_IF_NOT_HOMED
    {% else %}
      G28                        ; re-home after warmup to account for expansion
    {% endif %}
    G0 Y0 X35 Z0.2 F18000        ; go outside print area, start of purge line
    G92 E0.0
    G1 X80 E14.0 F500.0          ; purge line
    G92 E0.0
    G0 Z1.0                      ; Hop before moving to print area
    LED_PRINTING

  {% else %}
    CANCEL_PRINT MSG="TEMP and BED_TEMP required for PRINT_START."
  {% endif %}

[gcode_macro SET_HEAT_SOAK]
gcode:
  M117 Heat soak req.
  SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=soak_time VALUE={ params.TIME }
  SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=soak_start VALUE=0

[gcode_macro PRINT_END]
# Use PRINT_END for the slicer ending script.
gcode:
  M400                           ; wait for buffer to clear
  M117 Done.
  G92 E0                         ; zero the extruder
  G1 E-6.0 F3600                 ; retract filament

  # Get Boundaries.
  {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
  {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
  {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

  # Check end position to determine safe direction to move
  {% if printer.toolhead.position.x < (max_x - 20) %}
    {% set x_safe = 20.0 %}
  {% else %}
    {% set x_safe = -20.0 %}
  {% endif %}

  {% if printer.toolhead.position.y < (max_y - 20) %}
    {% set y_safe = 20.0 %}
  {% else %}
    {% set y_safe = -20.0 %}
  {% endif %}

  {% if printer.toolhead.position.z < (max_z - 0.4) %}
    {% set z_safe = 0.4 %}
  {% else %}
    {% set z_safe = max_z - printer.toolhead.position.z %}
  {% endif %}

  G91                            ; relative positioning
  G0 Z{z_safe} F3600             ; move nozzle up
  G0 X{x_safe} Y{y_safe} F20000  ; jerk nozzle to remove stringing
  G90                            ; absolute positioning

  {% if not params.STAY_HOT %}
    # Option to keep heaters on. Useful for print multi-color parts
    # with sequential prints.
    TURN_OFF_HEATERS
    M107                           ; turn off fan
  {% endif %}

  PARK_USEFULLY SPEED=18000
  RESTORE_SETTINGS
  LED_IDLE

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# Change this if you need more or less extrusion during pause.
variable_extrude: 1.0
gcode:
  # Read E from pause macro.
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  # Calculate safe lift position.
  {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
    {% set z_safe = 2.0 %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}

  LED_PAUSED
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91
  G1 E-{E} F2100
  G1 Z{z_safe} F900
  G90
  PARK_USEFULLY SPEED=18000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
  # Read E from pause macro.
  M117 Resuming...
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  G91
  G1 E{E} F2100
  RESTORE_GCODE_STATE NAME=PAUSE_state
  BASE_RESUME
  LED_PRINTING

[delayed_gcode return_to_idle]
gcode:
  LED_IDLE

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  {% set msg = params.MSG|default("Canceled") %}
  M117 {msg}
  LED_ERROR
  TURN_OFF_HEATERS
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  BASE_CANCEL_PRINT

  G92 E0                         ; zero the extruder
  G1 E-2.0 F3600                 ; retract filament
  PARK_USEFULLY
  M18                            ; Turn off steppers
  M106 S0                        ; Turn off part fans
  RESTORE_SETTINGS
  UPDATE_DELAYED_GCODE ID=return_to_idle DURATION=300

[gcode_macro UNLOAD_FILAMENT]
gcode:
  M83                            ; set extruder to relative
  G1 E8 F300                     ; extrude a little to soften tip
  G1 E-50 F1800                  ; retract filament completely
  M82                            ; set extruder to absolute

[gcode_macro LOAD_FILAMENT]
gcode:
  M83                            ; set extruder to relative
  G1 E20 F1800                   ; quickly load filament to down bowden
  G1 E20 F300                    ; slower extrusion for hotend path
  G1 E80 F150                    ; prime nozzle with filament
  M82                            ; set extruder to absolute

[gcode_macro CLEAR_DELAYED_GCODES]
gcode:
  UPDATE_DELAYED_GCODE ID=return_to_idle DURATION=0
